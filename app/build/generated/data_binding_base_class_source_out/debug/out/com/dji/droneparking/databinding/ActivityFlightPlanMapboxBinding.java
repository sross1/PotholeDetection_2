// Generated by view binder compiler. Do not edit!
package com.dji.droneparking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dji.droneparking.R;
import com.dji.droneparking.customview.AutoFitTextureView;
import com.dji.droneparking.customview.OverlayView;
import com.google.android.material.button.MaterialButton;
import dji.ux.widget.ReturnHomeWidget;
import dji.ux.widget.TakeOffWidget;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFlightPlanMapboxBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView altitudeTV;

  @NonNull
  public final Button cameraButton;

  @NonNull
  public final Button cancelFlightButton;

  @NonNull
  public final Button cancelFlightPlanButton;

  @NonNull
  public final TextView labelFlightPlan;

  @NonNull
  public final CardView landingCard;

  @NonNull
  public final LinearLayout llCancelFlightPlan;

  @NonNull
  public final LinearLayout llConfirmFlightPlan;

  @NonNull
  public final MaterialButton locateButton;

  @NonNull
  public final FragmentContainerView map;

  @NonNull
  public final Button mapButton;

  @NonNull
  public final MaterialButton photosButton;

  @NonNull
  public final ReturnHomeWidget returnHomeWidget;

  @NonNull
  public final Button startFlightButton;

  @NonNull
  public final CardView statusCard;

  @NonNull
  public final LinearLayout statusLayout;

  @NonNull
  public final TakeOffWidget takeoffWidgetFlightPlan;

  @NonNull
  public final OverlayView trackingOverlay;

  @NonNull
  public final AutoFitTextureView videoPreviewerSurface;

  @NonNull
  public final CardView videoView;

  private ActivityFlightPlanMapboxBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView altitudeTV, @NonNull Button cameraButton,
      @NonNull Button cancelFlightButton, @NonNull Button cancelFlightPlanButton,
      @NonNull TextView labelFlightPlan, @NonNull CardView landingCard,
      @NonNull LinearLayout llCancelFlightPlan, @NonNull LinearLayout llConfirmFlightPlan,
      @NonNull MaterialButton locateButton, @NonNull FragmentContainerView map,
      @NonNull Button mapButton, @NonNull MaterialButton photosButton,
      @NonNull ReturnHomeWidget returnHomeWidget, @NonNull Button startFlightButton,
      @NonNull CardView statusCard, @NonNull LinearLayout statusLayout,
      @NonNull TakeOffWidget takeoffWidgetFlightPlan, @NonNull OverlayView trackingOverlay,
      @NonNull AutoFitTextureView videoPreviewerSurface, @NonNull CardView videoView) {
    this.rootView = rootView;
    this.altitudeTV = altitudeTV;
    this.cameraButton = cameraButton;
    this.cancelFlightButton = cancelFlightButton;
    this.cancelFlightPlanButton = cancelFlightPlanButton;
    this.labelFlightPlan = labelFlightPlan;
    this.landingCard = landingCard;
    this.llCancelFlightPlan = llCancelFlightPlan;
    this.llConfirmFlightPlan = llConfirmFlightPlan;
    this.locateButton = locateButton;
    this.map = map;
    this.mapButton = mapButton;
    this.photosButton = photosButton;
    this.returnHomeWidget = returnHomeWidget;
    this.startFlightButton = startFlightButton;
    this.statusCard = statusCard;
    this.statusLayout = statusLayout;
    this.takeoffWidgetFlightPlan = takeoffWidgetFlightPlan;
    this.trackingOverlay = trackingOverlay;
    this.videoPreviewerSurface = videoPreviewerSurface;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFlightPlanMapboxBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFlightPlanMapboxBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_flight_plan_mapbox, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFlightPlanMapboxBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.altitudeTV;
      TextView altitudeTV = ViewBindings.findChildViewById(rootView, id);
      if (altitudeTV == null) {
        break missingId;
      }

      id = R.id.camera_button;
      Button cameraButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraButton == null) {
        break missingId;
      }

      id = R.id.cancel_flight_button;
      Button cancelFlightButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelFlightButton == null) {
        break missingId;
      }

      id = R.id.cancel_flight_plan_button;
      Button cancelFlightPlanButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelFlightPlanButton == null) {
        break missingId;
      }

      id = R.id.label_flight_plan;
      TextView labelFlightPlan = ViewBindings.findChildViewById(rootView, id);
      if (labelFlightPlan == null) {
        break missingId;
      }

      id = R.id.landing_card;
      CardView landingCard = ViewBindings.findChildViewById(rootView, id);
      if (landingCard == null) {
        break missingId;
      }

      id = R.id.ll_cancel_flight_plan;
      LinearLayout llCancelFlightPlan = ViewBindings.findChildViewById(rootView, id);
      if (llCancelFlightPlan == null) {
        break missingId;
      }

      id = R.id.ll_confirm_flight_plan;
      LinearLayout llConfirmFlightPlan = ViewBindings.findChildViewById(rootView, id);
      if (llConfirmFlightPlan == null) {
        break missingId;
      }

      id = R.id.locate_button;
      MaterialButton locateButton = ViewBindings.findChildViewById(rootView, id);
      if (locateButton == null) {
        break missingId;
      }

      id = R.id.map;
      FragmentContainerView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.map_button;
      Button mapButton = ViewBindings.findChildViewById(rootView, id);
      if (mapButton == null) {
        break missingId;
      }

      id = R.id.photos_button;
      MaterialButton photosButton = ViewBindings.findChildViewById(rootView, id);
      if (photosButton == null) {
        break missingId;
      }

      id = R.id.return_home_widget;
      ReturnHomeWidget returnHomeWidget = ViewBindings.findChildViewById(rootView, id);
      if (returnHomeWidget == null) {
        break missingId;
      }

      id = R.id.start_flight_button;
      Button startFlightButton = ViewBindings.findChildViewById(rootView, id);
      if (startFlightButton == null) {
        break missingId;
      }

      id = R.id.status_card;
      CardView statusCard = ViewBindings.findChildViewById(rootView, id);
      if (statusCard == null) {
        break missingId;
      }

      id = R.id.status_layout;
      LinearLayout statusLayout = ViewBindings.findChildViewById(rootView, id);
      if (statusLayout == null) {
        break missingId;
      }

      id = R.id.takeoff_widget_flight_plan;
      TakeOffWidget takeoffWidgetFlightPlan = ViewBindings.findChildViewById(rootView, id);
      if (takeoffWidgetFlightPlan == null) {
        break missingId;
      }

      id = R.id.tracking_overlay;
      OverlayView trackingOverlay = ViewBindings.findChildViewById(rootView, id);
      if (trackingOverlay == null) {
        break missingId;
      }

      id = R.id.video_previewer_surface;
      AutoFitTextureView videoPreviewerSurface = ViewBindings.findChildViewById(rootView, id);
      if (videoPreviewerSurface == null) {
        break missingId;
      }

      id = R.id.video_view;
      CardView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new ActivityFlightPlanMapboxBinding((RelativeLayout) rootView, altitudeTV,
          cameraButton, cancelFlightButton, cancelFlightPlanButton, labelFlightPlan, landingCard,
          llCancelFlightPlan, llConfirmFlightPlan, locateButton, map, mapButton, photosButton,
          returnHomeWidget, startFlightButton, statusCard, statusLayout, takeoffWidgetFlightPlan,
          trackingOverlay, videoPreviewerSurface, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
